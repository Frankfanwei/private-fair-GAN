Introduction / Background / Motivation:

* (5 points) What did you try to do? What problem did you try to solve? Articulate your objectives using absolutely no jargon.
* (5 points) How is it done today, and what are the limits of current practice?
* (5 points) Who cares? If you are successful, what difference will it make?

Approach:

* (10 points) What did you do exactly? How did you solve the problem? Why did you think it would be successful? Is anything new in your approach?
* (5 points) What problems did you anticipate? What problems did you encounter? Did the very first thing you tried work?

Experiments and Results:

* (10 points) How did you measure success? What experiments were used? What were the results, both quantitative and qualitative? Did you succeed? Did you fail? Why?

In addition, 20 more points will be distributed based on presentation quality and Deep Learning knowledge:

* (5 points) Appropriate use of visual aids. Are the ideas presented with appropriate illustration? Is the problem effectively visualized? Is the approach visualized appropriately? Are the results presented clearly; are the important differences illustrated? Every section and idea does not need a visual aid, but the most interesting and complex parts of the project should be illustrated.

* (5 points) Overall clarity. Is the presentation clear? Can a peer who has also taken Deep Learning understand all of the points addressed above? Is sufficient detail provided?

* (10 points) Finally, points will be distributed based on your understanding of how your project relates to Deep Learning. Here are some questions to think about:
* What was the structure of your problem? How did the structure of your model reflect the structure of your problem?
* What parts of your model had learned parameters (e.g., convolution layers) and what parts did not (e.g., post-processing classifier probabilities into decisions)?
* What representations of input and output did the neural network expect? How was the data pre/post-processed?
* What was the loss function?
* Did the model overfit? How well did the approach generalize?
* What hyperparameters did the model have? How were they chosen? How did they affect performance? What optimizer was used?
* What Deep Learning framework did you use?
* What existing code or models did you start with and what did those starting points provide?

